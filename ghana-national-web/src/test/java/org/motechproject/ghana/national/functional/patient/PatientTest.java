package org.motechproject.ghana.national.functional.patient;

import org.junit.runner.RunWith;
import org.motechproject.functional.pages.login.LoginPage;
import org.motechproject.functional.pages.home.HomePage;
import org.motechproject.functional.pages.patient.PatientPage;
import org.motechproject.functional.pages.patient.SearchPatientPage;
import org.motechproject.functional.util.DataGenerator;
import org.motechproject.ghana.national.functional.util.MotechIdGenerator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.Calendar;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"classpath:/applicationContext-functional-tests.xml"})
public class PatientTest extends AbstractTestNGSpringContextTests {

    @Autowired
    private PatientPage patientPage;

    @Autowired
    private MotechIdGenerator motechIdGenerator;

    @Autowired
    private LoginPage loginPage;

    @Autowired
    protected HomePage homePage;

    @Autowired
    protected DataGenerator dataGenerator;

    @Autowired
    protected SearchPatientPage searchPatientPage;

    @BeforeMethod
    public void setUp() {
        loginPage.login();
    }

    @Test
    public void shouldCreateAPatientWithAutoGeneratedIdAndSearchForHerByName() {
        String region = "Central Region";
        String district = "Awutu Senya";
        String subDistrict = "Kasoa";
        String facility = "Papaase CHPS";
        boolean insured = false;
        String firstName = "First Name" + dataGenerator.randomString(5);
        String middleName = "Middle Name";
        String lastName = "Last Name";
        String preferredName = "Preferred Name";
        Boolean estimatedDateOfBirth = false;
        Boolean gender = true;
        Calendar dateOfBirth = Calendar.getInstance();
        dateOfBirth.set(2009, 11, 30);
        String address = "Address";

        patientPage.open();

        // create
        patientPage
                .withRegistrationMode(PatientPage.PATIENT_REGN_MODE.AUTO_GENERATE_ID)
                .withPatientType(PatientPage.PATIENT_TYPE.PATIENT_MOTHER)
                .withFirstName(firstName)
                .withMiddleName(middleName)
                .withLastName(lastName)
                .withPreferredName(preferredName)
                .withDateofBirth(dateOfBirth)
                .withEstimatedDateOfBirth(estimatedDateOfBirth)
                .withInsured(insured)
                .withRegion(region)
                .withDistrict(district)
                .withSubDistrict(subDistrict)
                .withFacility(facility)
                .withAddress(address).submit();

        // search
        searchPatientPage.open();
        searchPatientPage.withName(firstName).search();
        searchPatientPage.assertIfSearchReturned(firstName, middleName, lastName, "F", "2009-11-30");

        String startingOfMiddleName = "Middle";
        searchPatientPage.initializePageElements();
        searchPatientPage.withName(startingOfMiddleName).search();
        searchPatientPage.assertIfSearchReturned(firstName, middleName, lastName, "F", "2009-11-30");

        String startingOfLastName = "Las";
        searchPatientPage.initializePageElements();
        searchPatientPage.withName(startingOfLastName).search();
        searchPatientPage.assertIfSearchReturned(firstName, middleName, lastName, "F", "2009-11-30");
    }


    @Test
    public void shouldCreateAPatientWithPrePrintedIdAndSearchForHerByMotechId() {
        PatientPage.PATIENT_REGN_MODE registrationMode = PatientPage.PATIENT_REGN_MODE.USE_PREPRINTED_ID;
        String motechId = motechIdGenerator.generatePrePrintedPatientId();
        PatientPage.PATIENT_TYPE patientType = PatientPage.PATIENT_TYPE.CHILD_UNDER_FIVE;
        String region = "Central Region";
        String district = "Awutu Senya";
        String subDistrict = "Kasoa";
        String facility = "Papaase CHPS";
        boolean insured = false;
        String firstName = "First Name" + dataGenerator.randomString(5);
        String middleName = "Middle Name";
        String lastName = "Last Name";
        String preferredName = "Preferred Name";
        Boolean estimatedDateOfBirth = false;
        Boolean gender = false;
        Calendar dateOfBirth = Calendar.getInstance();
        dateOfBirth.set(2009, 11, 30);
        String address = "Address";

        patientPage.open();

        // create
        patientPage
                .withRegistrationMode(registrationMode)
                .withMotechId(motechId)
                .withPatientType(patientType)
                .withFirstName(firstName)
                .withMiddleName(middleName)
                .withLastName(lastName)
                .withPreferredName(preferredName)
                .withDateofBirth(dateOfBirth)
                .withEstimatedDateOfBirth(estimatedDateOfBirth)
                .withGender(gender)
                .withInsured(insured)
                .withRegion(region)
                .withDistrict(district)
                .withSubDistrict(subDistrict)
                .withFacility(facility)
                .withAddress(address).submit();
        // search
        searchPatientPage.open();
        searchPatientPage.withMotechId(motechId).search();
        searchPatientPage.assertIfSearchReturned(firstName, middleName, lastName, "F", "2009-11-30");

    }

    @AfterMethod
    public void tearDown() {
        homePage.logout();
    }

    @AfterSuite
    public void closeall() {
        patientPage.getDriver().quit();
    }
}
